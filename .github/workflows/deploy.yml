# Simple workflow for deploying static content to GitHub Pages
name: Deploy

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "deploy"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: production
      url: "https://example.com"
    runs-on: ubuntu-latest
    steps:
      - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
        with:
          php-version: '8.3'
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      #- name: Create Database
      #  run: |
      #    mkdir -p database
      #    touch database/database.sqlite
      #- name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
      #  env:
      #    DB_CONNECTION: sqlite
      #    DB_DATABASE: database/database.sqlite
      #  run: php artisan test
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
        script: |
          set -e
          cd /var/www/good-morning
          php artisan down || true
          git pull
          npm run build
          composer install --prefer-dist --no-progress --no-ansi
          chown -R www-data:www-data *
          php artisan migrate --force
          php artisan cache:clear
          php artisan auth:clear-resets
          php artisan route:cache
          php artisan config:cache
          php artisan view:cache
          php artisan up

